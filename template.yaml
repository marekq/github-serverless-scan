AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Scan GitHub repositories with cfn-lint and store the results in DynamoDB

Parameters:
  githubuser:
    Type: String
    Description: The GitHub profile to scan (i.e. 'marekq' for https://github.com/marekq)
    Default: marekq

Resources:

  lambdalayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: gitlayer
      Description: Create a layer with gitpull tools
      ContentUri: lambda-layer/.
      CompatibleRuntimes:
        - python3.8
      LicenseInfo: MIT
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.8

  resultbucket:
    Type: AWS::S3::Bucket

  gitpull:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref lambdalayer
      Runtime: python3.8
      Handler: lint-lambda.handler
      CodeUri: ./lint-lambda
      Tracing: Active
      Description: Scan Github repositories and store results in DynamoDB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref gittable
      MemorySize: 1024
      Timeout: 30
      Environment: 
        Variables:
          dynamo_table: !Ref gittable
        
  discoverrepo:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 256
      Timeout: 30
      CodeUri: ./scan-lambda
      Handler: scan-lambda.handler
      Runtime: python3.8
      Tracing: Active
      Description: Get a list Github repositories
      ReservedConcurrentExecutions: 1
      Layers:
        - !Ref lambdalayer
      Environment:
        Variables:
          githubuser: !Ref githubuser

  genreport:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref lambdalayer
      Runtime: python3.8
      Handler: report-lambda.handler
      CodeUri: ./report-lambda
      Tracing: Active
      Description: Store scan results from DynamoDB
      MemorySize: 1024
      Timeout: 30
      Environment: 
        Variables:
          dynamo_table: !Ref gittable

  gittable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: gitfile
        AttributeType: S
      - AttributeName: check_id
        AttributeType: S
      - AttributeName: scan_uuid
        AttributeType: S
      KeySchema:
      - AttributeName: gitfile
        KeyType: HASH
      - AttributeName: check_id
        KeyType: RANGE  
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: scanguid
        KeySchema:
        - AttributeName: scan_uuid
          KeyType: HASH
        Projection:
          ProjectionType: ALL

  steplogs:
    Type: AWS::Logs::LogGroup

  gitstatemachine:
    Type: AWS::Serverless::StateMachine 
    Properties:
      DefinitionUri: statemachine/gitscan.asl.json
      DefinitionSubstitutions:
        gitscanlambda: !GetAtt discoverrepo.Arn
        gitpulllambda: !GetAtt gitpull.Arn
        genreportlambda: !GetAtt genreport.Arn
      Policies: 
        - LambdaInvokePolicy:
            FunctionName: !Ref discoverrepo
        - LambdaInvokePolicy:
            FunctionName: !Ref gitpull
        - LambdaInvokePolicy:
            FunctionName: !Ref genreport
        - CloudWatchFullAccess
      Type: STANDARD
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt steplogs.Arn

Outputs:
  StateMachineURL:
    #Value: !Ref gitstatemachine
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/states/home?region=${AWS::Region}#/statemachines/view/${gitstatemachine}'
