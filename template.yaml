AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Scan GitHub repositories with cfn-lint and store the results in DynamoDB

Parameters:
  destemail:
    Type: String
    Description: The receiving email address for scan report emails, leave blank to disable. You need to add this email to SES prior to deployment, see readme.md for more details. 
    Default: marek.kuczynski@gmail.com

  fromemail:
    Type: String
    Description: The source email address for scan report emails, leave blank to disable. You need to add this email to SES prior to deployment, see readme.md for more details. 
    Default: aws@marek.rocks

Resources:
  lambdalayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: lambdalayer
      Description: Create a layer with gitpull tools
      ContentUri: lambda-layer/.
      CompatibleRuntimes:
        - python3.8
      LicenseInfo: MIT
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: python3.8

  resultbucket:
    Type: AWS::S3::Bucket

  lintlambda:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref lambdalayer
      Runtime: python3.8
      Handler: lint-lambda.handler
      CodeUri: ./lint-lambda
      Tracing: Active
      Description: Scan Github repositories and store results in DynamoDB
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref resulttable
      MemorySize: 1024
      Timeout: 30
      Environment: 
        Variables:
          dynamo_table: !Ref resulttable
        
  scanlambda:
    Type: AWS::Serverless::Function
    Properties:
      MemorySize: 256
      Timeout: 30
      CodeUri: ./scan-lambda
      Handler: scan-lambda.handler
      Runtime: python3.8
      Tracing: Active
      Description: Get a list Github repositories
      ReservedConcurrentExecutions: 1
      Layers:
        - !Ref lambdalayer

  tokenlambda:
    Type: AWS::Serverless::Function
    Properties:
      Runtime: python3.8
      CodeUri: ./token-lambda
      Tracing: Active
      Handler: token-lambda.handler
      MemorySize: 128
      Timeout: 3

  reportlambda:
    Type: AWS::Serverless::Function
    Properties:
      Layers:
        - !Ref lambdalayer
      Runtime: python3.8
      Handler: report-lambda.handler
      CodeUri: ./report-lambda
      Tracing: Active
      Description: Store scan results from DynamoDB
      MemorySize: 128
      Timeout: 30
      Environment: 
        Variables:
          dynamo_table: !Ref resulttable
          s3_bucket: !Ref resultbucket
          dest_email: !Ref destemail
          from_email: !Ref fromemail
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ses:SendEmail'
              Resource: '*'
        - DynamoDBCrudPolicy:
            TableName: !Ref resulttable  
        - S3CrudPolicy:
            BucketName: !Ref resultbucket
        
  resulttable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
      - AttributeName: gitfile
        AttributeType: S
      - AttributeName: check_id
        AttributeType: S
      - AttributeName: scan_uuid
        AttributeType: S
      KeySchema:
      - AttributeName: gitfile
        KeyType: HASH
      - AttributeName: check_id
        KeyType: RANGE  
      BillingMode: PAY_PER_REQUEST
      GlobalSecondaryIndexes:
      - IndexName: scanguid
        KeySchema:
        - AttributeName: scan_uuid
          KeyType: HASH
        Projection:
          ProjectionType: ALL

  scanlogs:
    Type: AWS::Logs::LogGroup

  gitstatemachine:
    Type: AWS::Serverless::StateMachine 
    Properties:
      DefinitionUri: statemachine/gitscan.asl.json
      DefinitionSubstitutions:
        scanlambda: !GetAtt scanlambda.Arn
        lintlambda: !GetAtt lintlambda.Arn
        reportlambda: !GetAtt reportlambda.Arn
        tokenlambda: !GetAtt tokenlambda.Arn
      Policies: 
        - LambdaInvokePolicy:
            FunctionName: !Ref scanlambda
        - LambdaInvokePolicy:
            FunctionName: !Ref lintlambda
        - LambdaInvokePolicy:
            FunctionName: !Ref reportlambda
        - LambdaInvokePolicy:
            FunctionName: !Ref tokenlambda
        - CloudWatchFullAccess
      Type: STANDARD
      Logging:
        Level: ALL
        IncludeExecutionData: True
        Destinations:
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt scanlogs.Arn

Outputs:
  StateMachineURL:
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/states/home?region=${AWS::Region}#/statemachines/view/${gitstatemachine}'
